<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>《DD 非常日記》</title>
  
  <subtitle>筆記 x 日常</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://diyunhung.github.io/"/>
  <updated>2020-05-16T09:10:21.795Z</updated>
  <id>https://diyunhung.github.io/</id>
  
  <author>
    <name>DD</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>二維陣列應用題：陣列旋轉</title>
    <link href="https://diyunhung.github.io/2020/05/16/js01/"/>
    <id>https://diyunhung.github.io/2020/05/16/js01/</id>
    <published>2020-05-16T09:06:08.000Z</published>
    <updated>2020-05-16T09:10:21.795Z</updated>
    
    <content type="html"><![CDATA[<p>二維陣列簡單理解為一個陣列中的值有陣列型態<br>簡單的例子</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">const array &#x3D; [[1,2,3],[4,5,6],[7,8,9]]</span><br><span class="line">console.log(array[0][1])  &#x2F;&#x2F;2</span><br><span class="line">console.log(array[2][2])  &#x2F;&#x2F;9</span><br></pre></td></tr></table></figure><p>可以應用在一個有趣的試題</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">將 </span><br><span class="line">1,2,3</span><br><span class="line">4,5,6</span><br><span class="line">7,8,9</span><br><span class="line"></span><br><span class="line">旋轉90度</span><br><span class="line">7,4,1</span><br><span class="line">8,5,2</span><br><span class="line">9,6,3</span><br></pre></td></tr></table></figure><h3 id="方法一：陣列轉置後再倒轉（reverse）"><a class="header-anchor" href="#方法一：陣列轉置後再倒轉（reverse）"></a>方法一：陣列轉置後再倒轉（reverse）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">const array &#x3D; [[1,2,3],[4,5,6],[7,8,9]]</span><br><span class="line">const newArray &#x3D; [];</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;進行轉置</span><br><span class="line">for(let i &#x3D; 0; i&lt;array[0].length ; i++)&#123;</span><br><span class="line">    newArray[i]&#x3D;[];</span><br><span class="line">        for(let j &#x3D; 0 ; j&lt;array.length ; j++)&#123;</span><br><span class="line">            newArray[i][j]&#x3D;array[j][i];</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">console.log(newArray) </span><br><span class="line">&#x2F;&#x2F; [[1,4,7],</span><br><span class="line">&#x2F;&#x2F;  [2,5,8],</span><br><span class="line">&#x2F;&#x2F;  [3,6,9]</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;再倒轉</span><br><span class="line">for(let i &#x3D;0;i&lt;newArray.length; i++)&#123;</span><br><span class="line">    newArray[i].reverse();</span><br><span class="line">&#125;</span><br><span class="line">console.log(newArray)</span><br><span class="line">&#x2F;&#x2F; [7,4,1]</span><br><span class="line">&#x2F;&#x2F; [8,5,2]</span><br><span class="line">&#x2F;&#x2F; [9,6,3]</span><br></pre></td></tr></table></figure><h4 id="思路"><a class="header-anchor" href="#思路"></a>思路</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;原本的array</span><br><span class="line">[1,2,3]</span><br><span class="line">[4,5,6]</span><br><span class="line">[7,8,9]</span><br></pre></td></tr></table></figure><p>先將陣列轉置為：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;newArray</span><br><span class="line">[1,4,7]</span><br><span class="line">[2,5,8]</span><br><span class="line">[3,6,9]</span><br></pre></td></tr></table></figure><h4 id="轉置的步驟拆解："><a class="header-anchor" href="#轉置的步驟拆解："></a>轉置的步驟拆解：</h4><p>觀察<code>newarray</code>的<strong>第[0]列</strong>中<strong>值</strong>的順序就是<code>array</code>的每<strong>列</strong>中的<strong>第[0]的值</strong><br>第[0]列中有幾個值，等於迴圈要跑幾次(第[0]列的長度)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">for(let i&#x3D;0 ; i&lt;array[0].length; i++)</span><br></pre></td></tr></table></figure><p>此時<code>i</code>從0開始，<br>定義<code>newArray</code>的第[0]列中的值為陣列型態</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">newArray[i] &#x3D; [];</span><br></pre></td></tr></table></figure><p>開始為<code>newArray</code><strong>第[0]列</strong>賦值<br><code>array</code>本身陣列中有幾個值，等於迴圈要跑幾次</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">for(let j&#x3D;0 ; j&lt;array.length ; j++ )&#123;</span><br><span class="line">    newArray[i][j] &#x3D; array[j][i]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;組合</span><br><span class="line">for(let i &#x3D; 0; i&lt;array[0].length ; i++)&#123;</span><br><span class="line">    newArray[i]&#x3D;[];</span><br><span class="line">        for(let j &#x3D; 0 ; j&lt;array.length ; j++)&#123;</span><br><span class="line">            newArray[i][j]&#x3D;array[j][i];</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>//依執行步驟演示一次,<code>i</code>,<code>j</code>直接以數字表示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;array[0].length &#x3D; 3;</span><br><span class="line">&#x2F;&#x2F;array.length &#x3D; 3;</span><br><span class="line">for(let i &#x3D; 0 ; i&lt;3 ; i++)&#123;</span><br><span class="line">    newArray[0] &#x3D; [];</span><br><span class="line">        for(let j&#x3D;0 ; j&lt;3 ; j++ )&#123;</span><br><span class="line">            newArray[0][0] &#x3D; array[0][0]</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;繼續...</span><br><span class="line">&#x2F;&#x2F;i &#x3D; 0 , j &#x3D; 0+1 &#x3D; 1</span><br><span class="line">newArray[0][1] &#x3D; array[1][0];</span><br><span class="line">&#x2F;&#x2F;i &#x3D; 0 , j &#x3D; 1+1 &#x3D; 2</span><br><span class="line">newArray[0][2] &#x3D; array[2][0]; </span><br><span class="line">&#x2F;&#x2F;i &#x3D; 0 , j &#x3D; 2+1 &#x3D; 3 ; 3&lt;3為false，j迴圈結束，i迴圈執行i++</span><br><span class="line">&#x2F;&#x2F;i &#x3D; 0+1 &#x3D; 1 , j &#x3D; 0</span><br><span class="line">newArray[1][0] &#x3D; array[0][1];</span><br><span class="line">&#x2F;&#x2F;i &#x3D; 0+1 &#x3D; 1 , j &#x3D; 0 + 1 &#x3D; 1</span><br><span class="line">newArray[1][1] &#x3D; array[1][1];</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">&#x2F;&#x2F;i &#x3D; 2 , j &#x3D; 1</span><br><span class="line">newArray[2][1] &#x3D; array[1][2];</span><br><span class="line">&#x2F;&#x2F;i &#x3D; 2 , j &#x3D; 2</span><br><span class="line">newArray[2][2] &#x3D; array[2][2];</span><br><span class="line">&#x2F;&#x2F;-------</span><br><span class="line">&#x2F;&#x2F;轉置完成，喜獲newArray</span><br><span class="line">&#x2F;&#x2F;[1,4,7]</span><br><span class="line">&#x2F;&#x2F;[2,5,8]</span><br><span class="line">&#x2F;&#x2F;[3,6,9]</span><br></pre></td></tr></table></figure><p>再用reverse掉換順序</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">for(let i &#x3D;0;i&lt;newArray.length; i++)&#123;</span><br><span class="line">    newArray[i].reverse();</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;調換完成，newArray再次變身</span><br><span class="line">&#x2F;&#x2F;[7,4,1]</span><br><span class="line">&#x2F;&#x2F;[8,5,2]</span><br><span class="line">&#x2F;&#x2F;[9,6,3]</span><br></pre></td></tr></table></figure><p>DD後記：<br>沒有發現向右轉90度的呈現會和<strong>轉置再調換</strong>的一樣，其實一開始想的是方法二</p><h3 id="方法二"><a class="header-anchor" href="#方法二"></a>方法二</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">array &#x3D; </span><br><span class="line">[[1,2,3],</span><br><span class="line">[4,5,6],</span><br><span class="line">[7,8,9]]</span><br><span class="line">&#x2F;&#x2F;向右轉90度變成</span><br><span class="line">newArray &#x3D;</span><br><span class="line">[[7,4,1],</span><br><span class="line">[8,5,2],</span><br><span class="line">[9,6,3]]</span><br></pre></td></tr></table></figure><p>觀察array及要轉90度的newArray的規律</p><p>newArray裡的第[0]組陣列<br>newArray[0][0] = array[2][0]<br>newArray[0][1] = array[1][0]<br>newArray[0][2] = array[0][0]</p><p>newArray裡的第[1]組陣列（<br>newArray[1][0] = array[2][1]<br>newArray[1][1] = array[1][1]<br>newArray[1][2] = array[0][1]</p><p>newArray裡的第[2]組陣列<br>newArray[2][0] = array[2][2]<br>newArray[2][1] = array[1][2]<br>newArray[2][2] = array[0][2]</p><p>懶人包說明：<br><code>newArray</code>第[0]列裡的值，等於<code>array</code>第[2][1][0]列中第[0]個值<br><code>newArray</code>第[1]列裡的值，等於<code>array</code>第[2][1][0]列中第[1]個值<br><code>newArray</code>第[2]列裡的值，等於<code>array</code>第[2][1][0]列中第[2]個值</p><p><s>有比較好嗎？</s></p><p>先以i, j分別替代值，會發現有這樣的規律：<br>newArray[ i ][ j ] = array[array.lenth -1 - j ][ i ]<br><code>[arrary.lenth -1 - j]</code>會有點不直觀，必須一直找規律</p><p>其他迴圈跑的方式和<strong>方法一</strong>一樣，差別在不用再<code>reverse()</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">var array &#x3D; [[1, 2, 3], [4, 5, 6], [7, 8, 9]];</span><br><span class="line">const newArray &#x3D; [];</span><br><span class="line">var len &#x3D; array.length;</span><br><span class="line"></span><br><span class="line">for (let i &#x3D; 0; i &lt; array[0].length; i++) &#123;</span><br><span class="line">  newArray[i] &#x3D; [];</span><br><span class="line">  for (let j &#x3D; 0; j &lt; array.length; j++) &#123;</span><br><span class="line">    newArray[i][j] &#x3D; array[len - 1 - j][i];</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">console.log(newArray)</span><br><span class="line">&#x2F;&#x2F;[7,4,1]</span><br><span class="line">&#x2F;&#x2F;[8,5,2]</span><br><span class="line">&#x2F;&#x2F;[9,6,3]</span><br><span class="line">&#x2F;&#x2F;完成任務！！</span><br></pre></td></tr></table></figure><h2 id="備註"><a class="header-anchor" href="#備註"></a>備註</h2><ol><li>console.log出來會是一整列呈現，在此不多討論如何換行</li><li>對<code>[arrary.lenth -1 - j]</code>有好的解釋歡迎告訴我～</li></ol><h2 id="參考"><a class="header-anchor" href="#參考"></a>參考</h2><p><a href="https://www.itread01.com/content/1542810303.html" target="_blank" rel="noopener">【JS】轉置矩陣 #陣列</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;二維陣列簡單理解為一個陣列中的值有陣列型態&lt;br&gt;
簡單的例子&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;sp
      
    
    </summary>
    
    
      <category term="JS新手村" scheme="https://diyunhung.github.io/categories/JS%E6%96%B0%E6%89%8B%E6%9D%91/"/>
    
    
      <category term="javascript" scheme="https://diyunhung.github.io/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>新屋落成</title>
    <link href="https://diyunhung.github.io/2020/05/16/init-hexo-blog/"/>
    <id>https://diyunhung.github.io/2020/05/16/init-hexo-blog/</id>
    <published>2020-05-16T08:17:13.000Z</published>
    <updated>2020-05-16T08:35:57.628Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>「你在這個星球上的體驗應該是愉悅的，你必須幸福地生活然後離去。」</p></blockquote><p>&lt;非常日記&gt;取自大學時的選修的課&lt;創意思考&gt;中，教授指定的課題，</p><p>非常，不如往常的。</p><p>必須每天紀錄一件過往的自己不會去做的事情，像是打破自己的常規。</p><p>後來體認到其實每天都是如此的&lt;非-常&gt;。</p><p>2020年更是值得紀錄的一年，</p><p>即使還不夠勇敢，但仍必須為自己來點喝采，共勉之。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;&lt;p&gt;「你在這個星球上的體驗應該是愉悅的，你必須幸福地生活然後離去。」&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&amp;lt;非常日記&amp;gt;取自大學時的選修的課&amp;lt;創意思考&amp;gt;中，教授指定的課題，&lt;/p&gt;
&lt;p&gt;非常，不如往常的。&lt;/p&gt;
&lt;p&gt;必
      
    
    </summary>
    
    
      <category term="雜談" scheme="https://diyunhung.github.io/categories/%E9%9B%9C%E8%AB%87/"/>
    
    
      <category term="begin" scheme="https://diyunhung.github.io/tags/begin/"/>
    
  </entry>
  
</feed>
